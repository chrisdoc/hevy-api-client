// This file is auto-generated by @hey-api/openapi-ts

import type { Options as ClientOptions, TDataShape, Client } from "./client";
import type {
  GetV1WorkoutsData,
  GetV1WorkoutsResponses,
  GetV1WorkoutsErrors,
  PostV1WorkoutsData,
  PostV1WorkoutsResponses,
  PostV1WorkoutsErrors,
  GetV1WorkoutsCountData,
  GetV1WorkoutsCountResponses,
  GetV1WorkoutsEventsData,
  GetV1WorkoutsEventsResponses,
  GetV1WorkoutsEventsErrors,
  GetV1WorkoutsByWorkoutIdData,
  GetV1WorkoutsByWorkoutIdResponses,
  GetV1WorkoutsByWorkoutIdErrors,
  PutV1WorkoutsByWorkoutIdData,
  PutV1WorkoutsByWorkoutIdResponses,
  PutV1WorkoutsByWorkoutIdErrors,
  GetV1RoutinesData,
  GetV1RoutinesResponses,
  GetV1RoutinesErrors,
  PostV1RoutinesData,
  PostV1RoutinesResponses,
  PostV1RoutinesErrors,
  GetV1RoutinesByRoutineIdData,
  GetV1RoutinesByRoutineIdResponses,
  GetV1RoutinesByRoutineIdErrors,
  PutV1RoutinesByRoutineIdData,
  PutV1RoutinesByRoutineIdResponses,
  PutV1RoutinesByRoutineIdErrors,
  GetV1ExerciseTemplatesData,
  GetV1ExerciseTemplatesResponses,
  GetV1ExerciseTemplatesErrors,
  GetV1ExerciseTemplatesByExerciseTemplateIdData,
  GetV1ExerciseTemplatesByExerciseTemplateIdResponses,
  GetV1ExerciseTemplatesByExerciseTemplateIdErrors,
  GetV1RoutineFoldersData,
  GetV1RoutineFoldersResponses,
  GetV1RoutineFoldersErrors,
  PostV1RoutineFoldersData,
  PostV1RoutineFoldersResponses,
  PostV1RoutineFoldersErrors,
  GetV1RoutineFoldersByFolderIdData,
  GetV1RoutineFoldersByFolderIdResponses,
  GetV1RoutineFoldersByFolderIdErrors,
  DeleteV1WebhookSubscriptionData,
  DeleteV1WebhookSubscriptionResponses,
  GetV1WebhookSubscriptionData,
  GetV1WebhookSubscriptionResponses,
  GetV1WebhookSubscriptionErrors,
  PostV1WebhookSubscriptionData,
  PostV1WebhookSubscriptionResponses,
  PostV1WebhookSubscriptionErrors,
} from "./types.gen";
import { client as _heyApiClient } from "./client.gen";

export type Options<
  TData extends TDataShape = TDataShape,
  ThrowOnError extends boolean = boolean,
> = ClientOptions<TData, ThrowOnError> & {
  /**
   * You can provide a client instance returned by `createClient()` instead of
   * individual options. This might be also useful if you want to implement a
   * custom client.
   */
  client?: Client;
  /**
   * You can pass arbitrary values through the `meta` object. This can be
   * used to access values that aren't defined as part of the SDK function.
   */
  meta?: Record<string, unknown>;
};

/**
 * Get a paginated list of workouts
 */
export const getV1Workouts = <ThrowOnError extends boolean = false>(
  options: Options<GetV1WorkoutsData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetV1WorkoutsResponses,
    GetV1WorkoutsErrors,
    ThrowOnError
  >({
    url: "/v1/workouts",
    ...options,
  });
};

/**
 * Create a new workout
 */
export const postV1Workouts = <ThrowOnError extends boolean = false>(
  options: Options<PostV1WorkoutsData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).post<
    PostV1WorkoutsResponses,
    PostV1WorkoutsErrors,
    ThrowOnError
  >({
    url: "/v1/workouts",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options.headers,
    },
  });
};

/**
 * Get the total number of workouts on the account
 */
export const getV1WorkoutsCount = <ThrowOnError extends boolean = false>(
  options: Options<GetV1WorkoutsCountData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetV1WorkoutsCountResponses,
    unknown,
    ThrowOnError
  >({
    url: "/v1/workouts/count",
    ...options,
  });
};

/**
 * Retrieve a paged list of workout events (updates or deletes) since a given date. Events are ordered from newest to oldest. The intention is to allow clients to keep their local cache of workouts up to date without having to fetch the entire list of workouts.
 * Returns a paginated array of workout events, indicating updates or deletions.
 */
export const getV1WorkoutsEvents = <ThrowOnError extends boolean = false>(
  options: Options<GetV1WorkoutsEventsData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetV1WorkoutsEventsResponses,
    GetV1WorkoutsEventsErrors,
    ThrowOnError
  >({
    url: "/v1/workouts/events",
    ...options,
  });
};

/**
 * Get a single workoutâ€™s complete details by the workoutId
 */
export const getV1WorkoutsByWorkoutId = <ThrowOnError extends boolean = false>(
  options: Options<GetV1WorkoutsByWorkoutIdData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetV1WorkoutsByWorkoutIdResponses,
    GetV1WorkoutsByWorkoutIdErrors,
    ThrowOnError
  >({
    url: "/v1/workouts/{workoutId}",
    ...options,
  });
};

/**
 * Update an existing workout
 */
export const putV1WorkoutsByWorkoutId = <ThrowOnError extends boolean = false>(
  options: Options<PutV1WorkoutsByWorkoutIdData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).put<
    PutV1WorkoutsByWorkoutIdResponses,
    PutV1WorkoutsByWorkoutIdErrors,
    ThrowOnError
  >({
    url: "/v1/workouts/{workoutId}",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options.headers,
    },
  });
};

/**
 * Get a paginated list of routines
 */
export const getV1Routines = <ThrowOnError extends boolean = false>(
  options: Options<GetV1RoutinesData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetV1RoutinesResponses,
    GetV1RoutinesErrors,
    ThrowOnError
  >({
    url: "/v1/routines",
    ...options,
  });
};

/**
 * Create a new routine
 */
export const postV1Routines = <ThrowOnError extends boolean = false>(
  options: Options<PostV1RoutinesData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).post<
    PostV1RoutinesResponses,
    PostV1RoutinesErrors,
    ThrowOnError
  >({
    url: "/v1/routines",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options.headers,
    },
  });
};

/**
 * Get a routine by its Id
 */
export const getV1RoutinesByRoutineId = <ThrowOnError extends boolean = false>(
  options: Options<GetV1RoutinesByRoutineIdData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetV1RoutinesByRoutineIdResponses,
    GetV1RoutinesByRoutineIdErrors,
    ThrowOnError
  >({
    url: "/v1/routines/{routineId}",
    ...options,
  });
};

/**
 * Update an existing routine
 */
export const putV1RoutinesByRoutineId = <ThrowOnError extends boolean = false>(
  options: Options<PutV1RoutinesByRoutineIdData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).put<
    PutV1RoutinesByRoutineIdResponses,
    PutV1RoutinesByRoutineIdErrors,
    ThrowOnError
  >({
    url: "/v1/routines/{routineId}",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options.headers,
    },
  });
};

/**
 * Get a paginated list of exercise templates available on the account.
 */
export const getV1ExerciseTemplates = <ThrowOnError extends boolean = false>(
  options: Options<GetV1ExerciseTemplatesData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetV1ExerciseTemplatesResponses,
    GetV1ExerciseTemplatesErrors,
    ThrowOnError
  >({
    url: "/v1/exercise_templates",
    ...options,
  });
};

/**
 * Get a single exercise template by id.
 */
export const getV1ExerciseTemplatesByExerciseTemplateId = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    GetV1ExerciseTemplatesByExerciseTemplateIdData,
    ThrowOnError
  >,
) => {
  return (options.client ?? _heyApiClient).get<
    GetV1ExerciseTemplatesByExerciseTemplateIdResponses,
    GetV1ExerciseTemplatesByExerciseTemplateIdErrors,
    ThrowOnError
  >({
    url: "/v1/exercise_templates/{exerciseTemplateId}",
    ...options,
  });
};

/**
 * Get a paginated list of routine folders available on the account.
 */
export const getV1RoutineFolders = <ThrowOnError extends boolean = false>(
  options: Options<GetV1RoutineFoldersData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetV1RoutineFoldersResponses,
    GetV1RoutineFoldersErrors,
    ThrowOnError
  >({
    url: "/v1/routine_folders",
    ...options,
  });
};

/**
 * Create a new routine folder. The folder will be created at index 0, and all other folders will have their indexes incremented.
 */
export const postV1RoutineFolders = <ThrowOnError extends boolean = false>(
  options: Options<PostV1RoutineFoldersData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).post<
    PostV1RoutineFoldersResponses,
    PostV1RoutineFoldersErrors,
    ThrowOnError
  >({
    url: "/v1/routine_folders",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options.headers,
    },
  });
};

/**
 * Get a single routine folder by id.
 */
export const getV1RoutineFoldersByFolderId = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetV1RoutineFoldersByFolderIdData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetV1RoutineFoldersByFolderIdResponses,
    GetV1RoutineFoldersByFolderIdErrors,
    ThrowOnError
  >({
    url: "/v1/routine_folders/{folderId}",
    ...options,
  });
};

/**
 * Delete a webhook subscription.
 */
export const deleteV1WebhookSubscription = <
  ThrowOnError extends boolean = false,
>(
  options: Options<DeleteV1WebhookSubscriptionData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).delete<
    DeleteV1WebhookSubscriptionResponses,
    unknown,
    ThrowOnError
  >({
    url: "/v1/webhook-subscription",
    ...options,
  });
};

/**
 * Get the current webhook subscription.
 */
export const getV1WebhookSubscription = <ThrowOnError extends boolean = false>(
  options: Options<GetV1WebhookSubscriptionData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetV1WebhookSubscriptionResponses,
    GetV1WebhookSubscriptionErrors,
    ThrowOnError
  >({
    url: "/v1/webhook-subscription",
    ...options,
  });
};

/**
 * Create a new webhook subscription.
 * This endpoint allows you to create a webhook subscription that will notify your application when a workout is created.
 *
 * Your endpoint must respond with a `200 OK` status within **5 seconds**, otherwise the delivery will be retried.
 *
 * When a new workout is created, we will send a POST request to your provided URL with the following JSON payload:
 * ```json {
 * "id": "00000000-0000-0000-0000-000000000001",
 * "payload": {
 * "workoutId": "f1085cdb-32b2-4003-967d-53a3af8eaecb"
 * }
 * }
 *
 */
export const postV1WebhookSubscription = <ThrowOnError extends boolean = false>(
  options: Options<PostV1WebhookSubscriptionData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).post<
    PostV1WebhookSubscriptionResponses,
    PostV1WebhookSubscriptionErrors,
    ThrowOnError
  >({
    url: "/v1/webhook-subscription",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options.headers,
    },
  });
};
